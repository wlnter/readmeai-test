name: Build and Deploy to Development
on:
  push:
    branches:
      - "dev"
      - "dev-**"
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build:dev

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Compare ETag
        id: etag
        uses: actions/github-script@v6
        with:
          script: |
            const scripts = require('./.github/scripts/compare-etag.js');
            const assets = await scripts.compareETags('static-resources-test-bucket');
            return assets;

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{secrets.NPM_TOKEN}}

      - name: Upload to S3
        run: |
          aws s3 cp dist s3://static-resources-test-bucket/shopify/ --recursive

      - name: Invalidate Cloudfront Distribution and Wait For Completion
        uses: muratiger/invalidate-cloudfront-and-wait-for-completion-action@master
        env:
          DISTRIBUTION_ID: "E2DFNY495Y0EWM"
          PATHS: "/shopify/*"
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Send Notification
        uses: actions/github-script@v6
        with:
          script: |
            const scripts = require('./.github/scripts/notify.js');
            const release = {
              version: '${{steps.semantic.outputs.new_release_version}}',
              notes: '',
              previousVersion: '${{steps.semantic.outputs.last_release_version}}'
            }
            scripts.sendNotification('${{secrets.SLACK_WEBHOOKS}}', '${{steps.etag.outputs.result}}', release, '')
